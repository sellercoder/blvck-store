from utils.misc.logging import *
from data.config import *
from aiogram import types
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.dispatcher import FSMContext
from states.admin import NewCategory, ChangeCategory, DeleteCategory
from keyboards.admin.admin_menu import admin_menu, categories_keyboard, categories_menu, cancel_menu,confirm_menu,one_category_keyboard
from utils.db_api.admin_db_commands import summary,admin_text,get_categories_help, get_categories_page
from utils.db_api.models import Category

from loader import dp, bot

line = "‚ûñ"*11
info = "üí¨"
categories_text = "<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏</b>"

@dp.message_handler(user_id=ADMIN_ID, text="‚ñ´Ô∏è–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", state="*")
async def admin_categories_page(message: types.Message, state: FSMContext):
	logger.info(f"{message.chat.first_name}-{message.text}")
	text = f"{categories_text}\n{get_categories_page()}\n<code>{info} –í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ - –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é</code>" 
	await message.answer(text=text, reply_markup=categories_menu)

@dp.callback_query_handler(user_id=ADMIN_ID, text_contains="delete_category", state="*")
async def admin_delete_category_page(call: CallbackQuery,state: FSMContext):
	title = f"{info}\n"
	info_text = f"{get_categories_help()}\n<code>–ü—Ä–∏—à–ª–∏ –º–Ω–µ id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å</code> /admin <code>–µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª</code>"
	await call.message.edit_text(text=title)
	await call.message.answer(text=info_text, reply_markup=ReplyKeyboardRemove())
	await DeleteCategory.Id.set()

@dp.message_handler(user_id=ADMIN_ID, state=DeleteCategory.Id)
async def enter_id(message: types.Message, state: FSMContext):
	logger.info(f"Id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {message.text}")
	category_id = message.text
	category = Category.find(category_id)
	category.delete()
	await message.answer(f"<code>–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞!</code>")
	summary_text = summary()
	text = admin_text(summary_text)
	await message.answer(text=text, reply_markup=admin_menu)
	await state.reset_state()

# ===============================================
@dp.callback_query_handler(user_id=ADMIN_ID, text_contains="change_category", state="*")
async def admin_edit_category_page(call: CallbackQuery,state: FSMContext):
	title = f"{info}\n"
	info_text = f"{get_categories_help()}\n<code>{info} –ü—Ä–∏—à–ª–∏ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—É—é –Ωy–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å</code>"
	await call.message.edit_text(text=title)
	await call.message.answer(text=info_text, reply_markup=ReplyKeyboardRemove())
	await ChangeCategory.Id.set()

@dp.message_handler(user_id=ADMIN_ID, state=ChangeCategory.Id)
async def admin_id_category_page(message: types.Message, state: FSMContext):
	logger.info(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è - {message.text}")
	category_id = message.text
	category = Category.find(category_id)
	await message.answer(f"{category.page()}\n\n<code>{info} –ß—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?</code>", reply_markup=one_category_keyboard(category_id))


@dp.callback_query_handler(user_id=ADMIN_ID, state=ChangeCategory.Id)
async def admin_edit_category_page(call: CallbackQuery,state: FSMContext):
	current_category = str(call.data).split(':')[2] 
	current_action = str(call.data).split(':')[1]
	logger.info(f"{call.data}")

	if current_action == "name":
		logger.info(f"Name")
		category = Category.find(current_category)
		category.id = current_category
		await call.message.edit_text(f"<code>{info}–ù–∞–ø–∏—à–∏ –Ω–æ–≤–æ–µ –∏–º—è</code>")
		await ChangeCategory.Name.set()
		await state.update_data(category=category)
	
	elif current_action == "description":
		logger.info(f"Description")
		category = Category.find(current_category)
		category.id = current_category
		await call.message.edit_text(f"<code>{info}–ü—Ä–∏—à–ª–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</code>")
		await ChangeCategory.Description.set()
		await state.update_data(category=category)

@dp.message_handler(user_id=ADMIN_ID, state=ChangeCategory.Name)
async def category_name(message: types.Message, state: FSMContext):
	data = await state.get_data()
	category: Category = data.get("category")
	name = message.text
	category = Category.find(category.id)
	category.update(name=name)
	await message.answer(f"{category.page()}\n<code>{info} –ò–º—è –∏–∑–º–µ–Ω–µ–Ω–æ! –Ω–∞–∂–º–∏</code> /admin")
	await state.reset_state()

@dp.message_handler(user_id=ADMIN_ID, state=ChangeCategory.Description)
async def category_description(message: types.Message, state: FSMContext):
	data = await state.get_data()
	category: Category = data.get("category")
	description = message.text
	category = Category.find(category.id)
	category.update(description=description)
	await message.answer(f"{category.page()}\n<code>{info} –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ! –Ω–∞–∂–º–∏</code> /admin")
	await state.reset_state()



@dp.callback_query_handler(user_id=ADMIN_ID, text_contains="add_category", state="*")
async def admin_add_category_page(call: CallbackQuery,state: FSMContext):
	title = f"{info}\n"
	info_text = f"<code>–ü—Ä–∏—à–ª–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</code>"
	await call.message.edit_text(text=title)
	await call.message.answer(text=info_text, reply_markup=ReplyKeyboardRemove())
	await NewCategory.Name.set()

@dp.message_handler(user_id=ADMIN_ID, state=NewCategory.Name)
async def enter_name(message: types.Message, state: FSMContext):
	logger.info(f"–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {message.text}")
	name = message.text
	category = Category()
	category.name = name
	await message.answer(f"<code>–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</code>")
	await NewCategory.Description.set()
	await state.update_data(category=category)

@dp.message_handler(user_id=ADMIN_ID, state=NewCategory.Description)
async def enter_description(message: types.Message, state: FSMContext):
	data = await state.get_data()
	category: Category = data.get("category")
	description = message.text
	category.description = description
	await message.answer(text=f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {category.name}\n<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n{description}\n<code>{info}–í—Å–µ –≤–µ—Ä–Ω–æ?</code>",reply_markup=confirm_menu)
	await NewCategory.Confirm.set()
	await state.update_data(category=category)

@dp.callback_query_handler(user_id=ADMIN_ID, state=NewCategory.Confirm)
async def confirm(call: types.CallbackQuery, state: FSMContext):
	if call.data == "cancel":
		cancel_text = f"<code>{info} –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ</code>"
		await call.message.edit_text(cancel_text)
	else:
		data = await state.get_data()
		category: Category = data.get("category")
		category.save()
		success_text = f"<code>{info} –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>{category.name}</b> —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n–ù–µ –∑–∞–±—É–¥—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –Ω–µ–µ –ø–æ–∑–∏—Ü–∏–∏, –∞ –≤ –ø–æ–∑–∏—Ü–∏–∏ —Ç–æ–≤–∞—Ä—ã üòÄ</code>"
		await call.message.edit_text(success_text)

	await call.answer(cache_time=1)
	summary_text = summary()
	text = admin_text(summary_text)
	await call.message.answer(text=text, reply_markup=admin_menu)
	await state.reset_state()

@dp.message_handler(user_id=ADMIN_ID, state=NewCategory.Confirm)
async def confirm(message: types.Message, state: FSMContext):
	await message.answer(text=f"<code>{info} –í–æ–æ–±—â–µ-—Ç–æ —è —Å–ø—Ä–æ—Å–∏–ª –≤–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç... üëÜ</code>")

@dp.message_handler(user_id=ADMIN_ID, state=ChangeCategory.Confirm)
async def confirm(message: types.Message, state: FSMContext):
	await message.answer(text=f"<code>{info} –í–æ–æ–±—â–µ-—Ç–æ —è —Å–ø—Ä–æ—Å–∏–ª –≤–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç... üëÜ</code>")




